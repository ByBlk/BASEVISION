---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by laure.
--- DateTime: 15/03/2025 18:28
---



-- 30 fertilisant 
-- 90 grainescannabis 
-- 30 engrais

local items = {
    gang = {
        -- systemepercucourt type weapons
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "systemepercucourt",
            stock = 20, crewType = "gang", armes = true, price = 20000
        },
        -- canoncourt
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "canoncourt",
            stock = 20, crewType = "gang", armes = true, price = 20000
        },
        -- canonglock
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "canonglock",
            stock = 20, crewType = "gang", armes = true, price = 6750
        },
        -- selecteurtir
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "selecteurtir",
            stock = 20, crewType = "gang", armes = true, price = 12500
        },
        -- poigneesmg
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "poigneesmg",
            stock = 20, crewType = "gang", armes = true, price = 12500
        },
        -- verrousecurite
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "verrousecurite",
            stock = 20, crewType = "gang", armes = true, price = 12500
        },
        -- percuteurak
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "percuteurak",
            stock = 20, crewType = "gang", armes = true, price = 150000
        },
        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "systemepercucourt",
            stock = 20, crewType = "gang", armes = false, price = 10
        },

        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "grainescannabis",
            stock = 20, crewType = "gang", armes = false, price = 10
        },
        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "fertilisant",
            stock = 20, crewType = "gang", armes = false, price = 10
        },
        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "engrais",
            stock = 20, crewType = "gang", armes = false, price = 32
        }
    },

    mc = {
        -- canon9mm
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "canon9mm",
            stock = 20, crewType = "mc", armes = true, price = 20000
        },
-- systemepercussion
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "systemepercussion",
            stock = 20, crewType = "mc", armes = true, price = 27250
        },
        -- canon
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "canon",
            stock = 20, crewType = "mc", armes = true, price = 8750
        },
-- percuteur
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "percuteur",
            stock = 20, crewType = "mc", armes = true, price = 5750
        },
        -- canonpompe
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "canonpompe",
            stock = 20, crewType = "mc", armes = true, price = 187750
        },

        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "ephedrine",
            stock = 20, crewType = "mc", armes = false, price = 30
        },
        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "lithium",
            stock = 20, crewType = "mc", armes = false, price = 30
        },
        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "phenylacetone",
            stock = 20, crewType = "mc", armes = false, price = 30
        },
    },


    orga = {
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "canonglock",
            stock = 20, crewType = "mc", armes = true, price = 8750
        },
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "selecteurtir",
            stock = 20, crewType = "mc", armes = true, price = 12500
        },
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "guidonak",
            stock = 20, crewType = "mc", armes = true, price = 100000
        },
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "percuteurak",
            stock = 20, crewType = "mc", armes = true, price = 150000
        },


        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "pavosomnifere",
            stock = 20, crewType = "orga", armes = false, price = 45
        },
        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "chlorureammonium",
            stock = 20, crewType = "orga", armes = false, price = 45
        },
        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "phenylacetone",
            stock = 20, crewType = "orga", armes = false, price = 90
        },

        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "phenylacetone",
            stock = 20, crewType = "orga", armes = false, price = 75
        }
    },

    mafia = {
        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "feuilledecoca",
            stock = 20, crewType = "mafia", armes = false, price = 75.44
        },
        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "acidesulfurique",
            stock = 20, crewType = "mafia", armes = false, price = 75.44
        },

        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "canon",
            stock = 20, crewType = "mafia", armes = true, price = 8750
        },
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "canoncourt",
            stock = 20, crewType = "mafia", armes = true, price = 20000
        },
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "canonlong",
            stock = 20, crewType = "mafia", armes = true, price = 171000
        },
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "poign√©epolymere",
            stock = 20, crewType = "mafia", armes = true, price = 128500
        },
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "blocpompe",
            stock = 20, crewType = "mafia", armes = true, price = 150000
        },
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "cylindre",
            stock = 20, crewType = "mafia", armes = true, price = 519500
        },
        {
            itemType = "weapons", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = false, level = 0, cooldown = 24, name = "percuteur",
            stock = 20, crewType = "mafia", armes = true, price = 5750
        },
        {
            itemType = "matierePremiere", img = "", crewRang = "d", status = "active", rang = "A",
            matierePremiere = true, level = 0, cooldown = 24, name = "acidesulfurique",
            stock = 20, crewType = "mafia", armes = false, price = 212
        }
    }
}

CREW_ACTIVITY_TYPE = {
    ["drugs_sell"] = {
        speciality = "Dealer",
    },
    ["heist"] = {
        speciality = "Braqueur",
    },
    ["drugs_production"] = {
        speciality = "Farmeur",
    },
    ["kill"] = {
        speciality = "Kills",
    },

}

local crewCraft = {
    ["gang"] = vector3(1083.22, -2015.44, 40.48),
    ["mc"] = vector3(1353.72, 4384.93, 44.19),
    ["orga"] = vector3(32.63, -2688.96, 11.01),
    ["mafia"] = vector3(-884.87, 7624.67, 40.88),
}



local LEVELS <const> = {
    { rank = "D", level = 5, xpRequired = 0 },
    { rank = "C", level = 10, xpRequired = 1000 },
    { rank = "B", level = 25, xpRequired = 3000 },
    { rank = "A", level = 50, xpRequired = 7000 },
    { rank = "S", level = 100, xpRequired = 14000 }
}

local craftItems = {
    ["gang"] = {
        -- Niveau D (pas de tablette) ‚Üí ID 0
        [0] = {
            {
                name = "weapon_knife",
                label = "Couteau",
                timer = 10,
                recipe = {
                    { name = "lames", label = "Lames", amount = 1 },
                    { name = "manche_enroule", label = "Manche Enroul√©", amount = 1 },
                }
            },
            {
                name = "weapon_katana",
                label = "Katana",
                timer = 10,
                recipe = {
                    { name = "lames", label = "Lames", amount = 1 },
                    { name = "manche_tresse", label = "Manche Tress√©", amount = 1 },
                }
            },
        },

        -- Niveau C ‚Üí ID 1000
        [1000] = {
            {
                name = "weapon_snspistol",
                label = "HK PM710",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce M√©tallique", amount = 1 },
                    { name = "canon_compact", label = "Canon Compact", amount = 1 },
                    { name = "systemepercussion", label = "Syst√®me de percussion", amount = 1 },
                    { name = "systemepercucourt", label = "Percussion court", amount = 1 },
                }
            }
        },

        -- Niveau B ‚Üí ID 3000
        [3000] = {
            {
                name = "weapon_combatpistol",
                label = "Glock 17",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce M√©tallique", amount = 1 },
                    { name = "poignee_plastique", label = "Poign√©e plastique", amount = 1 },
                    { name = "extracteur", label = "Extracteur renforc√©", amount = 1 },
                    { name = "canonglock", label = "Canon Glock", amount = 1 },
                }
            }
        },

        -- Niveau A ‚Üí ID 7000
        [7000] = {
            {
                name = "weapon_minismg",
                label = "Skorpion VZ.61",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce M√©tallique", amount = 1 },
                    { name = "poignee", label = "Poign√©e", amount = 1 },
                    { name = "ressort", label = "Ressorts", amount = 2 },
                    { name = "canoncourt", label = "Canon court", amount = 1 },
                    { name = "selecteur", label = "S√©lecteur de tir", amount = 1 },
                }
            },
            {
                name = "weapon_microsmg",
                label = "Mini Uzi",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce M√©tallique", amount = 1 },
                    { name = "ressort", label = "Ressorts", amount = 3 },
                    { name = "bloc_culasse", label = "Bloc culasse", amount = 1 },
                    { name = "poignee_smg", label = "Poign√©e SMG", amount = 1 },
                    { name = "verrou_securite", label = "Verrou de s√©curit√©", amount = 1 },
                }
            }
        },

        -- Niveau S ‚Üí ID 14000
        [14000] = {
            {
                name = "weapon_compactrifle",
                label = "AK-74",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce M√©tallique", amount = 1 },
                    { name = "crosse_bois", label = "Crosse bois", amount = 1 },
                    { name = "ressort", label = "Ressorts", amount = 4 },
                    { name = "support_crosse", label = "Support de crosse", amount = 1 },
                    -- { name = "guidon_reglable", label = "Guidon r√©glable AK", amount = 1 }, -- retir√©
                    { name = "percuteurak", label = "Percuteur AK", amount = 1 },
                }
            }
        }
    },
    ["mafia"] = {
        -- Niveau D ‚Üí ID 0
        [0] = {
            {
                name = "weapon_crowbar",
                label = "Pied-de-biche",
                timer = 10,
                recipe = {
                    { name = "barre_acier", label = "Barre d‚Äôacier", amount = 1 },
                    { name = "grip_antiderapant", label = "Grip antid√©rapant", amount = 1 },
                }
            },
            {
                name = "weapon_hammer",
                label = "Masse",
                timer = 10,
                recipe = {
                    { name = "acier_inox", label = "Acier inox", amount = 1 },
                    { name = "poignee_renforcee", label = "Poign√©e renforc√©e", amount = 1 },
                }
            }
        },

        -- Niveau C ‚Üí ID 1000
        [1000] = {
            {
                name = "weapon_vintagepistol",
                label = "Vintage",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "poignee_bois", label = "Poign√©e bois", amount = 1 },
                    { name = "canon", label = "Canon", amount = 1 },
                }
            },
            {
                name = "weapon_doubleaction",
                label = "Colt M1878",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "barillet", label = "Barillet", amount = 1 },
                    { name = "canon", label = "Canon", amount = 1 },
                }
            }
        },

        -- Niveau B ‚Üí ID 3000
        [3000] = {
            {
                name = "weapon_gusenberg",
                label = "Gusenberg",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "crosse_bois", label = "Crosse bois", amount = 1 },
                    { name = "bloc_culasse", label = "Bloc culasse", amount = 1 },
                    { name = "canonlong", label = "Canon long", amount = 1 },
                }
            }
        },

        -- Niveau A ‚Üí ID 7000
        [7000] = {
            {
                name = "weapon_combatshotgun",
                label = "Spas-12",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "crosse", label = "Crosse", amount = 1 },
                    { name = "poign√©epolymere", label = "Poign√©e polym√®re", amount = 1 },
                    { name = "blocpompe", label = "Bloc pompe", amount = 1 },
                    { name = "canoncourt", label = "Canon court", amount = 1 },
                }
            }
        },

        -- Niveau S ‚Üí ID 14000
        [14000] = {
            {
                name = "weapon_tacticalrifle",
                label = "Tactical Rifle",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "crosse_fer", label = "Crosse fer", amount = 1 },
                    { name = "ressort", label = "Ressorts", amount = 1 },
                    { name = "bloc_culasse", label = "Bloc culasse", amount = 1 },
                    { name = "canon", label = "Canon", amount = 1 },
                    { name = "percuteur", label = "Percuteur", amount = 1 },
                }
            }
        }
    },
    ["mc"] = {
        -- Niveau D ‚Üí ID 0
        [0] = {
            {
                name = "weapon_switchblade",
                label = "Couteau √† cran d'arr√™t",
                timer = 10,
                recipe = {
                    { name = "lame", label = "Lame", amount = 1 },
                    { name = "plastique", label = "Plastique", amount = 1 },
                }
            },
            {
                name = "weapon_knuckle",
                label = "Poing am√©ricain",
                timer = 10,
                recipe = {
                    { name = "plaque_metalique", label = "Plaque m√©tallique", amount = 1 },
                    { name = "vis_fixe", label = "Vis de fixation", amount = 1 },
                }
            }
        },

        -- Niveau C ‚Üí ID 1000
        [1000] = {
            {
                name = "weapon_p2000",
                label = "HK P2000",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "canon_compact", label = "Canon compact", amount = 1 },
                    { name = "percuteur_court", label = "Percuteur", amount = 1 },
                }
            }
        },

        -- Niveau B ‚Üí ID 3000
        [3000] = {
            {
                name = "weapon_pistol",
                label = "Beretta 92 FS",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "poignee_plastique", label = "Poign√©e plastique", amount = 1 },
                    { name = "ressort", label = "Ressorts", amount = 1 },
                    { name = "canon9mm", label = "Canon 9mm", amount = 1 },
                }
            },
            {
                name = "weapon_machinepistol",
                label = "INTRATEC 9",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "bloc_culasse", label = "Bloc de culasse", amount = 1 },
                    { name = "systemepercussion", label = "Syst√®me de percussion", amount = 1 },
                    { name = "canon", label = "Canon", amount = 1 },
                }
            }
        },

        -- Niveau A ‚Üí ID 7000
        [7000] = {
            {
                name = "weapon_heavypistol",
                label = "Colt M45A1",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "poignee_bois", label = "Poign√©e en bois", amount = 1 },
                    { name = "bloc_culasse", label = "Bloc culasse", amount = 1 },
                    { name = "ressort", label = "Ressorts", amount = 1 },
                    { name = "canon", label = "Canon", amount = 1 },
                }
            },
            {
                name = "weapon_pistol50",
                label = "Desert Eagle 50AE",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "poignee_metal", label = "Poign√©e en m√©tal", amount = 1 },
                    { name = "ressort_renforce", label = "Ressorts renforc√©s", amount = 1 },
                    { name = "bloc_culasse", label = "Bloc culasse", amount = 1 },
                    { name = "percuteur", label = "Percuteur", amount = 1 },
                }
            }
        },

        -- Niveau S ‚Üí ID 14000
        [14000] = {
            {
                name = "weapon_sawnoffshotgun",
                label = "Mosberg 590 A1",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "crosse_bois", label = "Crosse en bois", amount = 1 },
                    { name = "ressort", label = "Ressorts", amount = 1 },
                    { name = "bloc_culasse", label = "Bloc culasse", amount = 1 },
                    { name = "canonpompe", label = "Canon √† pompe", amount = 1 },
                    { name = "percuteur", label = "Percuteur", amount = 1 },
                }
            }
        }
    },
    ["orga"] = {
        -- Niveau D ‚Üí ID 0
        [0] = {
            {
                name = "weapon_dagger",
                label = "Dague de combat",
                timer = 10,
                recipe = {
                    { name = "lame", label = "Lame", amount = 1 },
                    { name = "poignee_plastique", label = "Poign√©e plastique", amount = 1 },
                }
            },
            {
                name = "weapon_machete",
                label = "Machette de combat",
                timer = 10,
                recipe = {
                    { name = "lame_longue", label = "Lame longue", amount = 1 },
                    { name = "manche_bois", label = "Manche en bois", amount = 1 },
                }
            }
        },

        -- Niveau C ‚Üí ID 1000
        [1000] = {
            {
                name = "weapon_coltm1878",
                label = "Colt M1878",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "barillet", label = "Barillet", amount = 1 },
                    { name = "canon", label = "Canon", amount = 1 },
                }
            }
        },

        -- Niveau B ‚Üí ID 3000
        [3000] = {
            {
                name = "weapon_glock17",
                label = "Glock 17",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "poignee_plastique", label = "Poign√©e plastique", amount = 1 },
                    { name = "extracteur", label = "Extracteur renforc√©", amount = 1 },
                    { name = "canonglock", label = "Canon Glock", amount = 1 },
                }
            },
            {
                name = "weapon_revolver",
                label = "Taurus",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "poignee_caoutchouc", label = "Poign√©e en caoutchouc", amount = 1 },
                    { name = "ressort", label = "Ressort", amount = 1 },
                    { name = "selecteurtir", label = "S√©lecteur de tir", amount = 1 },
                }
            }
        },

        -- Niveau A ‚Üí ID 7000
        [7000] = {
            {
                name = "weapon_smg",
                label = "MP5",
                timer = 10,
                recipe = {
                    { name = "pieces_metal", label = "Pi√®ces m√©talliques", amount = 1 },
                    { name = "crosse_metal", label = "Crosse m√©tallique", amount = 1 },
                    { name = "bloc_culasse", label = "Bloc de culasse", amount = 1 },
                    { name = "poignee_plastique", label = "Poign√©e plastique", amount = 1 },
                    { name = "canon", label = "Canon", amount = 1 },
                }
            }
        },

        -- Niveau S ‚Üí ID 14000
        [14000] = {
            {
                name = "weapon_assaultrifle",
                label = "AK-47",
                timer = 10,
                recipe = {
                    { name = "piece_metalique", label = "Pi√®ce m√©tallique", amount = 1 },
                    { name = "crosse_bois", label = "Crosse bois", amount = 1 },
                    { name = "ressort", label = "Ressort", amount = 1 },
                    { name = "support_crosse", label = "Support de crosse", amount = 1 },
                    { name = "guidonak", label = "Guidon AK", amount = 1 },
                    { name = "percuteurak", label = "Percuteur AK", amount = 1 },
                }
            }
        }
    }
}

---@class Crew
---@field public name string
---@field public label string
---@field public type string
---@field public devise string
---@field public perms table
---@field public xp number
---@field public place string
---@field public color string
---@field public creator string
---@field public hierarchie string
---@field public stockageId number
---@field public garageId number
---@field public level number
---@field public craftId number
---@field public state number
---@field public image string
function CreateCrew(name, label, type, devise, perms, xp, place, color, creator, hierarchie, stockageId, garageId, laboratoryId, level, craftId, state, image)
    local self = {}
    self.name = name
    self.label = label
    self.type = type
    self.devise = devise
    self.perms = perms
    self.xp = xp
    self.place = place
    self.color = color
    self.creator = creator
    self.hierarchie = hierarchie
    self.stockageId = stockageId
    self.garageId = garageId
    self.laboratoryId = laboratoryId
    self.level = level
    self.craftId = craftId
    self.state = state
    self.image = image
    self.posGarage = nil
    self.posStockage = nil
    self.posLaboratory = nil
    self.properties = {  }
    self.members = {}
    self.grades = {}
    self.vehicles = {}
    self.itemsMarket = items[type] or {}
    self.activities = {}
    self.posCraft = (BLK and BLK.ilegal and BLK.ilegal.craft and BLK.ilegal.craft[self.type]) or vector3(0, 0, 0)
    self.propertiesLoaded = false
    self.sessions = {}

    MySQL.Async.fetchAll("SELECT * FROM crew_grades WHERE faction_name = @faction", {
        faction = self.name
    }, function(result)
        if result and #result > 0 then
            self.grades = {}
            -- V√©rifie si le r√©sultat existe et n'est pas vide
            for k, v in ipairs(result) do
                table.insert(self.grades, {
                    name = v.name,
                    label = v.label,
                    grade = v.grade
                })
            end

            MySQL.Async.fetchAll("SELECT * FROM crew_members WHERE faction = @faction", {
                faction = self.name
            }, function(result)
                if result and #result > 0 then
                    self.members = {}
                    -- V√©rifie si le r√©sultat existe et n'est pas vide
                    for k, v in pairs(result) do
                        local member = { lname = v.lastname, fname = v.firstname, identifier = v.identifier, rank = v.faction_grade, xp = v.xp, role = self.getGradeLabel(v.faction_grade), status = false, mugshot = nil, seniority = os.date("%d/%m/%Y", v.joined_at / 1000), playTime = v.playtime, }
                        while not VFW.PlayerMugshot[v.identifier] do
                            Wait(0)
                        end
                        member.mugshot = VFW.PlayerMugshot[v.identifier]
                        table.insert(self.members, member)

                        if not self.sessions[v.identifier] then
                            self.sessions[v.identifier] = {}
                        end
                        self.sessions[v.identifier].playTime = v.playtime

                    end
                end
                MySQL.Async.fetchAll("SELECT * FROM crew_activities WHERE crew = @faction", {
                    faction = self.name
                }, function(result)
                    if result and #result > 0 then
                        self.activities = {}
                        for k, v in pairs(result) do
                            if not self.activities[v.member] then
                                self.activities[v.member] = {
                                    ["drugs_sell"] = 0,
                                    ["heist"] = 0,
                                    ["drugs_production"] = 0,
                                    ["kill"] = 0
                                }
                            end
                            self.activities[v.member][v.activity] = v.score or 0
                        end
                        for k, v in pairs(self.members) do
                            if not self.activities[v.identifier] then
                                self.activities[v.identifier] = {
                                    ["drugs_sell"] = 0,
                                    ["heist"] = 0,
                                    ["drugs_production"] = 0,
                                    ["kill"] = 0
                                }
                            end
                        end
                    end
                end)
            end)

        else
            console.debug("Aucun grade trouv√© pour la faction :", self.name)
        end
    end)

    function self.getGradeLabel(grade)
        for k, v in pairs(self.grades) do
            if v.grade == grade then
                return v.label
            end
        end
        return nil
    end

    function self.getMyItemsCraft()
        local items = {}
        if not craftItems[self.type] then
            return items
        end
        for xpRequired, itemList in pairs(craftItems[self.type]) do
            if tonumber(self.xp) >= tonumber(xpRequired) then
                for _, item in ipairs(itemList) do
                    table.insert(items, item)
                end
            end
        end

        return items
    end

    CreateThread(function()
        while true do
            Wait(1000 * 60 * 5) -- 5 minutes
            self.saveActivities()
        end
    end)

    function self.getRoleByLabel(label)
        for k, v in pairs(self.grades) do
            if v.label == label then
                return v.grade
            end
        end
        return nil
    end

    function self.getPropertyAsync(id)
        if id == nil then
            return nil
        end

        local property = nil
        while property == nil do
            property = VFW.GetProperty(id)
            Wait(0)
        end
        return property
    end
    --
    if (garageId ~= nil) then
        local property = self.getPropertyAsync(garageId)
        table.insert(self.properties, {
            id = property.id,
            type = property.type,
            address = property.name,
            maxPlaces = property.data.maxPlaces and property.data.maxPlaces or nil,
            vehicles = property.data.vehicles or {},
        })
        self.posGarage = property.pos
    end

    if (stockageId ~= nil) then
        local property = self.getPropertyAsync(stockageId)
        table.insert(self.properties, {
            id = property.id,
            type = property.type,
            address = property.name,
            maxPlaces = property.data.maxPlaces and property.data.maxPlaces or nil,
            vehicles = property.data.vehicles or {},
        })
        self.posStockage = property.pos
    end
    --
    self.propertiesLoaded = true

    CreateThread(function()
        while not self.propertiesLoaded do
            Wait(0)
        end
        local properties = VFW.GetCrewProperty(self.name)
        for i = 1, #properties do
            local property = properties[i]
            if property.id ~= self.garageId and property.id ~= self.stockageId then
                table.insert(self.properties, {
                    id = property.id,
                    type = property.type,
                    address = property.address,
                    maxPlaces = property.maxPlaces,
                    vehicles = property.vehicles,
                })
            end
        end

        for j = 1, #self.properties do
            local property = self.properties[j]
            if property.type == "Garage" then
                for k, v in pairs(property.vehicles) do
                    console.debug("k , v : ", k, v)
                    table.insert(self.vehicles, { vehName = v, plate = k })
                end
            end
        end

        if #self.properties > 0 then
            for i = 1, #self.properties do
                local property = self.properties[i]
                if property.type == "Garage" then
                    for j = 1, #property.vehicles do
                        local vehicle = property.vehicles[j]
                        if vehicle then
                            table.insert(self.vehicles, { name = vehicle.model, plate = vehicle.plate })
                        end
                    end
                end
            end
        end

    end)

    if (laboratoryId ~= nil) then
        local labo = GetLabo(laboratoryId)
        if labo then
            self.posLaboratory = labo.coords
            table.insert(self.properties, {
                id = labo.id,
                type = "Laboratoire",
                address = "Laboratoire de " .. labo.laboType,
            })
        end
    end

    function self.create()
        MySQL.Async.execute("INSERT INTO crews (name, label, color, hierarchie, type, devise, place, creator) VALUES (@name, @label, @color, @hierarchie, @type, @devise, @place, @creator)", {
            name = self.name,
            label = self.label,
            color = self.color,
            hierarchie = self.hierarchie,
            type = self.type,
            devise = self.devise,
            place = self.place,
            creator = self.creator,
        }, function()
            console.debug("[^2INFO^7] Demande de cr√©ation de crew " .. self.name .. " sauvegard√©e.")
        end)
    end

    function self.getMemberRole(identifier)

        for i = 1, #self.members do
            if self.members[i].identifier == identifier then
                return self.members[i].role
            end
        end

        return "nocrew"
    end

    function self.sendToConnectMember(triggerName, data)
        for i = 1, #self.members do
            local member = self.members[i]
            local target = VFW.GetPlayerFromIdentifier(member.identifier)
            if target then
                target.triggerEvent(triggerName, data)
            end
        end
    end

    function self.setTypeToConnectMember(newType)
        for i = 1, #self.members do
            local member = self.members[i]
            local target = VFW.GetPlayerFromIdentifier(member.identifier)
            if target then
                target.faction.type = newType
            end
        end
    end

    function self.setType(newType)
        self.type = newType
        self.posCraft = BLK.ilegal.craft[self.type] or vector3(0, 0, 0)
        self.itemsMarket = items[self.type] or {}
        self.setTypeToConnectMember(self.type)
        self.sendToConnectMember("crew:client:setType", self.type)
    end

    function self.removeMember(identifier)
        local target = VFW.GetPlayerFromIdentifier(identifier)
        if target then
            target.setFaction("nocrew", 0)
            for i = 1, #self.members do
                if self.members[i].identifier == identifier then
                    table.remove(self.members, i)
                    break
                end
            end
            return
        end

        MySQL.Async.execute("DELETE FROM crew_members WHERE identifier = @identifier", {
            identifier = identifier,
        }, function()
            console.debug("[^2INFO^7] Suppression de " .. identifier .. " dans le crew " .. self.name)

            MySQL.Async.execute("UPDATE users SET faction = @faction, faction_grade = @grade WHERE identifier = @identifier", {
                identifier = identifier,
                faction = "nocrew",
                grade = 0,
            }, function()
                console.debug("[^2INFO^7] Suppression de " .. identifier .. " dans le crew " .. self.name)
            end)

        end)

        for i = 1, #self.members do
            if self.members[i].identifier == identifier then
                table.remove(self.members, i)
                break
            end
        end

    end

    --function getLevelRankByLevelCrew()
    --    local level = {
    --        { rank = "D", level = 5, xpRequired = 0 },
    --        { rank = "C", level = 10, xpRequired = 1000  },
    --        { rank = "B", level = 25, xpRequired = 3000   },
    --        { rank = "A", level = 50, xpRequired = 7000  },
    --        { rank = "S", level = 100, xpRequired = 14000  }
    --    }
    --
    --    for i = 1, #level do
    --        local levelInfo = level[i]
    --        if self.level < levelInfo.xpRequired then
    --            return levelInfo.rank
    --        end
    --    end
    --
    --end

    function self.getMemberByIdentifier(identifier)
        for i = 1, #self.members do
            if self.members[i].identifier == identifier then
                return self.members[i]
            end
        end
        return nil
    end

    function self.updateMemberGrade(identifier, grade)
        local member = self.getMemberByIdentifier(identifier)

        if not member then
            return
        end

        local target = VFW.GetPlayerFromIdentifier(identifier)

        member.rank = grade
        member.role = self.getGradeLabel(grade)
        console.debug("Update member grade", identifier, grade)
        MySQL.Async.execute("UPDATE crew_members SET faction_grade = @grade WHERE identifier = @identifier", {
            identifier = identifier,
            grade = grade,
        }, function()
            console.debug("[^2INFO^7] Grade de " .. identifier .. " mis √† jour.")
        end)

        if target then
            target.setFaction(self.name, grade)
        else
            MySQL.Async.execute("UPDATE users SET faction = @faction, faction_grade = @grade WHERE identifier = @identifier", {
                identifier = identifier,
                faction = self.name,
                grade = grade,
            }, function()
                console.debug("[^2INFO^7] Grade de " .. identifier .. " mis √† jour.")
            end)
        end


    end

    function self.updateMemberMugshot(identifier, mugshot)
        local member = self.getMemberByIdentifier(identifier)
        if not member then
            return
        end
        member.mugshot = mugshot
    end

    function self.updateMemberStatus(identifier, status)

        local member = self.getMemberByIdentifier(identifier)
        if not member then
            return
        end

        member.status = status
    end

    function self.updateMemberMugshot(identifier, mugshot)

        local member = self.getMemberByIdentifier(identifier)
        if not member then
            return
        end

        console.debug("Update member mugshot", identifier, mugshot)
        member.mugshot = mugshot
    end

    function self.mysplit (inputstr, sep)
        if sep == nil then
            sep = "%s"
        end
        local t = {}
        for str in string.gmatch(inputstr, "([^" .. sep .. "]+)") do
            table.insert(t, str)
        end
        return t
    end

    function self.addMember(identifier, playerName, mugshot, rank)
        local nametab = self.mysplit(playerName, " ")
        local fname = nametab[1]
        local lname = nametab[2]

        local member = { lname = lname, fname = fname, identifier = identifier, rank = rank, xp = 0, PlayTime = 0, role = self.getGradeLabel(rank), status = true, mugshot = mugshot, seniority = os.date("%d/%m/%Y", os.time()), }

        local memberExist = self.getMemberByIdentifier(identifier)
        if memberExist then
            memberExist.rank = rank
            memberExist.role = self.getGradeLabel(rank)
            return
        end

        if not self.sessions[identifier] then
            self.sessions[identifier] = {}
        end
        self.sessions[identifier].playTime = 0
        self.sessions[identifier].startTime = os.time()

        member.playTime = 0
        self.addActivities(identifier)

        table.insert(self.members, member)

        return member
    end

    function self.updatePlayerMugshot(identifier, mugshot)
        local member = self.getMemberByIdentifier(identifier)
        if not member then
            print("Member not found")
            return
        end
        member.mugshot = mugshot
    end

    function self.getPerms()
        return self.perms
    end

    function self.editPerms(perms)
        self.perms = perms
    end

    function self.addVehicle(vehicleModel)
        local vehicle = VFW.CreateVehicle("crew:" .. self.name, vehicleModel)
        self.properties[1].addVehicle(vehicle.plate)
        table.insert(self.vehicles, { vehName = vehicleModel, plate = vehicle.plate })

        return vehicle.plate
    end

    function self.getGrade(grade)
        console.debug("Attempt to get grade", grade)
        console.debug(json.encode(self.grades, { indent = true }))
        for k, v in pairs(self.grades) do
            if v.grade == grade then
                return v
            end
        end
        return nil
    end

    function self.save()

        print("Attempt to save crew with type ", self.name, self.type)
        MySQL.Async.execute("UPDATE crews SET name = @name, label = @label, type = @type, devise = @devise, perms = @perms, xp = @xp, place = @place, color = @color, creator = @creator, hierarchie = @hierarchie, stockageId = @stockageId, garageId = @garageId, laboratoryId = @laboratoryId, level = @level, craftId = @craftId, state = @state, image = @image WHERE name = @name", {
            name = self.name,
            label = self.label,
            type = self.type,
            devise = self.devise,
            perms = json.encode(self.perms),
            xp = self.xp,
            place = self.place,
            color = self.color,
            creator = self.creator,
            hierarchie = self.hierarchie,
            stockageId = self.stockageId,
            garageId = self.garageId,
            laboratoryId = self.laboratoryId,
            level = self.level,
            craftId = self.craftId,
            state = self.state,
            image = self.image,
        }, function(rowsChanged)
            if rowsChanged == 0 then
                print("Failed to save crew " .. self.name)
            else
                    print("Crew " .. self.name .. " saved")
                end
        end)

        if self.posGarage ~= { x = 0, y = 0, z = 0 } and self.posGarage ~= nil then
            local property = VFW.GetProperty(self.garageId)
            if property then
                property.updatePosition(self.posGarage)
            end
        end

        if self.posStockage ~= { x = 0, y = 0, z = 0 } and self.posStockage ~= nil then
            local property = VFW.GetProperty(self.stockageId)
            if property then
                property.updatePosition(self.posStockage)
            end
        end

        if self.posLaboratory ~= { x = 0, y = 0, z = 0 } and self.posLaboratory ~= nil then

            console.debug("Attemp to save laboId", self.laboratoryId)
            local labo = GetLabo(self.laboratoryId)

            if (labo) then
                labo.coords = self.posLaboratory
                labo.needSave = true
            end

        end
    end

    function self.saveActivities()
        if not self.activities or next(self.activities) == nil then
            return
        end
        for identifier, activities in pairs(self.activities) do
            for activityType, score in pairs(activities) do
                MySQL.Async.execute([[
                INSERT INTO crew_activities (crew, member, activity, score)
                VALUES (@crew, @member, @activity, @score)
                ON DUPLICATE KEY UPDATE score = @score
            ]], {
                    crew = self.name,
                    member = identifier,
                    activity = activityType,
                    score = score
                })
            end
        end
    end

    function self.addActivities(identifier)
        if not self.activities[identifier] then
            self.activities[identifier] = {
                heist = 0,
                drugs_sell = 0,
                drugs_production = 0,
                kill = 0,
            }
        end
    end

    function self.addActivity(identifier, activityType)
        if not CREW_ACTIVITY_TYPE[activityType] then
            return
        end
        if not self.activities[identifier] then
            self.activities[identifier] = {}
            for k, v in pairs(CREW_ACTIVITY_TYPE) do
                self.activities[identifier][k] = 0
            end
        end
        self.activities[identifier][activityType] = self.activities[identifier][activityType] + 1
    end

    function self.getActivities()
        return self.activities
    end

    function self.addXp(xp)
        self.xp = self.xp + xp
        self.save()
    end

    function self.getXP()
        return self.xp
    end

    function self.canUse(gradeName, perm)
        for k, v in pairs(self.perms) do
            if k == gradeName then
                return v[perm] or false
            end
        end
        return false
    end

    function self.getMembers()
        return self.members
    end

    function self.getStockage()
        local stockage = {}

        for k, v in pairs(self.properties) do
            if v.type == 3 then
                table.insert(stockage, v)
            end
        end

        return stockage
    end

    function self.startSession(identifier)
        if not self.sessions[identifier] then
            self.sessions[identifier] = {}
        end
        self.sessions[identifier].startTime = os.time()
        if not self.sessions[identifier].playTime then
            self.sessions[identifier].playTime = 0
        end
    end

    function self.endSession(identifier)
        if self.sessions[identifier] then
            console.debug("endSession", identifier)
            local endTime = os.time()
            if not self.sessions[identifier].playTime then
                self.sessions[identifier].playTime = 0
            end
            if not self.sessions[identifier].startTime then
                self.sessions[identifier].startTime = 0
            end
            -- self.sessions[identifier].playTime = self.sessions[identifier].playTime + (endTime - self.sessions[identifier].startTime or 0)
            self.sessions[identifier].playTime = (tonumber(self.sessions[identifier].playTime) or 0) + ((endTime - (self.sessions[identifier].startTime or 0)))
            self.sessions[identifier].startTime = nil
            MySQL.Async.execute("UPDATE crew_members SET playtime = @playTime WHERE identifier = @identifier AND faction = @faction", {
                ['@identifier'] = identifier,
                ['@playTime'] = self.sessions[identifier].playTime,
                ['@faction'] = self.name
            }, function()
                print("[^2INFO^7] Playtime de " .. identifier .. " mis √† jour.")
                local currentMember = self.getMemberByIdentifier(identifier)
                if currentMember then
                    currentMember.playTime = self.sessions[identifier].playTime
                end
            end)
        end
    end

    function self.getVehicles()
        local vehicles = {}
        for k, v in pairs(self.vehicles) do
            table.insert(vehicles, v.name)
        end
    end

    function self.getColor()
        return self.color
    end

    function self.getCommerce()
        ---TODO : Get commerce
    end

    function self.data()
        return {
            name = self.name,
            label = self.label,
            type = self.type,
            devise = self.devise,
            perms = self.perms,
            members = self.members,
            xp = self.xp,
            place = self.place,
            color = self.color,
            creator = self.creator,
            hierarchie = self.hierarchie,
            stockageId = self.stockageId,
            garageId = self.garageId,
            level = self.level,
            craftId = self.craftId,
            state = self.state,
            image = self.image,
            posGarage = self.posGarage,
            posStockage = self.posStockage,
            posLaboratory = self.posLaboratory,
            posCraft = self.posCraft,
            properties = self.properties,
            vehicles = self.vehicles,
            grade = self.grades,
        }
    end

    return self
end

RegisterNetEvent("playerDropped", function()
    local source = source
    local player = VFW.GetPlayerFromId(source)
    if player then
        local crew = VFW.GetCrewByName(player.getFaction().name)
        if crew then
            crew.endSession(player.identifier)
        end
    end
end)

---@param crewType 'gang'|'mc'|'orga'|'mafia'
VFW.GetCraftPosByCrew = function(crewType)
    return BLK.ilegal.craft[crewType] or nil
end

VFW.GetAllCrews = function()
    return VFW.Gestion.Organizations
end

---@return Crew
VFW.GetCrewByName = function(name)
    return VFW.Gestion.Organizations[name] or nil
end

VFW.GetVehiclesInCrew = function(crewName)
    local crew = VFW.GetCrewByName(crewName)
    if not crew then
        return nil
    end
    return crew.getVehicles()
end

VFW.GetMembersInCrew = function(crewName)
    local crew = VFW.GetCrewByName(crewName)
    if not crew then
        return nil
    end
    return crew.getMembers()
end

VFW.GetStockageInCrew = function(crewName)
    local crew = VFW.GetCrewByName(crewName)
    if not crew then
        return nil
    end
    return crew.getStockage()
end

VFW.GetXPInCrew = function(crewName)
    local crew = VFW.GetCrewByName(crewName)
    if not crew then
        return nil
    end
    return crew.getXP()
end

VFW.GetCommerceInCrew = function(crewName)
    ---TODO : Get commerce
end

--RegisterCommand("additemss",function()
--    for faction, levels in pairs(craftItems) do
--        for level, items in pairs(levels) do
--            for _, item in ipairs(items) do
--                local itemName = item.name
--                local itemLabel = item.label
--                local recipe = item.recipe
--
--                local typeItem = "object"
--                if string.sub(itemName, 1, 7) == "weapon_" then
--                    typeItem = "weapon"
--                end
--
--
--                -- V√©rifie et ins√®re l'item principal
--                local result = MySQL.single.await('SELECT * FROM items WHERE name = ?', {itemName})
--                if not result then
--                    MySQL.insert.await('INSERT INTO items (name, label, weight, data, premium, perm) VALUES (?, ?, ?, ?, ?, ?)', {
--                        itemName,
--                        itemLabel,
--                        0, -- poids
--                        json.encode({ type =typeItem }), -- par d√©faut type object,
--                        0, -- pas premium
--                        0 -- pas de permission
--                    })
--                    print(("Item ajout√© : %s (%s)"):format(itemLabel, itemName))
--                else
--                    print(("Item d√©j√† existant : %s (%s)"):format(itemLabel, itemName))
--                end
--
--                -- Boucle dans chaque ingr√©dient du recipe
--                for _, ingredient in ipairs(recipe) do
--                    local ingredientName = ingredient.name
--                    local ingredientLabel = ingredient.label
--
--                    local ingredientType = "object"
--                    if string.sub(ingredientName, 1, 7) == "weapon_" then
--                        ingredientType = "weapon"
--                    end
--                    -- V√©rifie si l'item de recette existe d√©j√†
--                    local ingResult = MySQL.single.await('SELECT * FROM items WHERE name = ?', {ingredientName})
--                    if not ingResult then
--                        MySQL.insert.await('INSERT INTO items (name, label, weight, data, premium, perm) VALUES (?, ?, ?, ?, ?, ?)', {
--                            ingredientName,
--                            ingredientLabel,
--                            0,
--                            json.encode({ type = ingredientType }),
--                            0,
--                            0
--                        })
--                        print(("Ingr√©dient ajout√© : %s (%s)"):format(ingredientLabel, ingredientName))
--                    else
--                        print(("Ingr√©dient d√©j√† existant : %s (%s)"):format(ingredientLabel, ingredientName))
--                    end
--                end
--            end
--        end
--    end
--
--end)
